{"version":3,"sources":["constants.ts","Dialog/Dialog.tsx","utils.ts","Help/Help.tsx","point.ts","Tile/Tile.tsx","Pawn/Pawn.tsx","Title/Title.tsx","Board/Board.tsx","Die/Die.tsx","App/App.tsx","registerServiceWorker.ts","index.tsx"],"names":["COLORS","PAWNS","x","y","color","BASE_TILES","type","PATH_TILES","next","FINISH_TILES","Dialog_Dialog_Dialog","react","[object Object]","children","this","props","className","randomNumber","min","max","Math","floor","random","translateColor","blue","green","red","yellow","capitalize","str","charAt","toUpperCase","slice","Help_Help_Help","show","activeColor","currentAction","Point","point1","point2","Tile_Tile_Tile","size","spacing","styleSize","stylePosition","coordinate","classnames_default","style","height","left","top","width","Pawn_Pawn_Pawn","handleClick","click","disabled","pawn","onClick","Title_Title","Board_Board_Board","super","tileSize","tiles","pawns","pawnClick","enabledPawns","map","tile","i","Object","assign","key","includes","Die_Die_Die","setState","randomStyle","state","value","transform","src_App_App","start","dialog","moveActiveColorToStart","closeDialog","startHelpTimer","rollDie","die","showHelp","firstPawnOfActiveColor","find","newPawns","updatePawns","startTileOfActiveColor","undefined","from","to","pawnIndex","findIndex","equals","targetPawn","clickedPawn","isPawnOnBase","tileAt","newPosition","pointAtStepsFrom","pawnAtNewPosition","firstEmptyBaseTile","some","setTimeout","activateNextColor","nextColor","activePawns","length","point","steps","currentTile","console","error","relativeTile","down","right","up","nextPoint","add","finishTileIndex","finishTilesOfActiveColor","baseTilesOfActiveColor","filter","nextColorIndex","pawnsOfActiveColorOnPathTiles","clearTimeout","helpTimeout","concat","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","react_dom","document","getElementById","URL","toString","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8684b33e.chunk.js","sourcesContent":["import { PawnModel } from './Pawn/Pawn'\nimport { TileModel } from './Tile/Tile'\n\nexport const COLORS: colors = ['red', 'blue', 'green', 'yellow']\n\nexport const PAWNS: PawnModel[] = [\n    { x: 0, y: 0, color: COLORS[0] },\n    { x: 1, y: 0, color: COLORS[0] },\n    { x: 0, y: 1, color: COLORS[0] },\n    { x: 1, y: 1, color: COLORS[0] },\n    { x: 9, y: 0, color: COLORS[1] },\n    { x: 10, y: 0, color: COLORS[1] },\n    { x: 9, y: 1, color: COLORS[1] },\n    { x: 10, y: 1, color: COLORS[1] },\n    { x: 9, y: 9, color: COLORS[2] },\n    { x: 10, y: 9, color: COLORS[2] },\n    { x: 9, y: 10, color: COLORS[2] },\n    { x: 10, y: 10, color: COLORS[2] },\n    { x: 0, y: 9, color: COLORS[3] },\n    { x: 1, y: 9, color: COLORS[3] },\n    { x: 0, y: 10, color: COLORS[3] },\n    { x: 1, y: 10, color: COLORS[3] },\n]\n\nexport const BASE_TILES: TileModel[] = [\n    { x: 0, y: 0, color: COLORS[0], type: 'base' },\n    { x: 1, y: 0, color: COLORS[0], type: 'base' },\n    { x: 0, y: 1, color: COLORS[0], type: 'base' },\n    { x: 1, y: 1, color: COLORS[0], type: 'base' },\n    { x: 9, y: 0, color: COLORS[1], type: 'base' },\n    { x: 10, y: 0, color: COLORS[1], type: 'base' },\n    { x: 9, y: 1, color: COLORS[1], type: 'base' },\n    { x: 10, y: 1, color: COLORS[1], type: 'base' },\n    { x: 9, y: 9, color: COLORS[2], type: 'base' },\n    { x: 10, y: 9, color: COLORS[2], type: 'base' },\n    { x: 9, y: 10, color: COLORS[2], type: 'base' },\n    { x: 10, y: 10, color: COLORS[2], type: 'base' },\n    { x: 0, y: 9, color: COLORS[3], type: 'base' },\n    { x: 1, y: 9, color: COLORS[3], type: 'base' },\n    { x: 0, y: 10, color: COLORS[3], type: 'base' },\n    { x: 1, y: 10, color: COLORS[3], type: 'base' },\n]\n\nexport const PATH_TILES: TileModel[] = [\n    { x: 0, y: 4, next: 'right', type: 'start', color: COLORS[0] },\n    { x: 1, y: 4, next: 'right', type: 'path' },\n    { x: 2, y: 4, next: 'right', type: 'path' },\n    { x: 3, y: 4, next: 'right', type: 'path' },\n    { x: 4, y: 4, next: 'up', type: 'path' },\n    { x: 4, y: 3, next: 'up', type: 'path' },\n    { x: 4, y: 2, next: 'up', type: 'path' },\n    { x: 4, y: 1, next: 'up', type: 'path' },\n    { x: 4, y: 0, next: 'right', type: 'path' },\n    { x: 5, y: 0, next: 'right', type: 'path' },\n    { x: 6, y: 0, next: 'down', type: 'start', color: COLORS[1] },\n    { x: 6, y: 1, next: 'down', type: 'path' },\n    { x: 6, y: 2, next: 'down', type: 'path' },\n    { x: 6, y: 3, next: 'down', type: 'path' },\n    { x: 6, y: 4, next: 'right', type: 'path' },\n    { x: 7, y: 4, next: 'right', type: 'path' },\n    { x: 8, y: 4, next: 'right', type: 'path' },\n    { x: 9, y: 4, next: 'right', type: 'path' },\n    { x: 10, y: 4, next: 'down', type: 'path' },\n    { x: 10, y: 5, next: 'down', type: 'path' },\n    { x: 10, y: 6, next: 'left', type: 'start', color: COLORS[2] },\n    { x: 9, y: 6, next: 'left', type: 'path' },\n    { x: 8, y: 6, next: 'left', type: 'path' },\n    { x: 7, y: 6, next: 'left', type: 'path' },\n    { x: 6, y: 6, next: 'down', type: 'path' },\n    { x: 6, y: 7, next: 'down', type: 'path' },\n    { x: 6, y: 8, next: 'down', type: 'path' },\n    { x: 6, y: 9, next: 'down', type: 'path' },\n    { x: 6, y: 10, next: 'left', type: 'path' },\n    { x: 5, y: 10, next: 'left', type: 'path' },\n    { x: 4, y: 10, next: 'up', type: 'start', color: COLORS[3] },\n    { x: 4, y: 9, next: 'up', type: 'path' },\n    { x: 4, y: 8, next: 'up', type: 'path' },\n    { x: 4, y: 7, next: 'up', type: 'path' },\n    { x: 4, y: 6, next: 'left', type: 'path' },\n    { x: 3, y: 6, next: 'left', type: 'path' },\n    { x: 2, y: 6, next: 'left', type: 'path' },\n    { x: 1, y: 6, next: 'left', type: 'path' },\n    { x: 0, y: 6, next: 'up', type: 'path' },\n    { x: 0, y: 5, next: 'up', type: 'path' },\n]\n\nexport const FINISH_TILES: TileModel[] = [\n    { x: 1, y: 5, next: 'right', color: COLORS[0], type: 'finish' },\n    { x: 2, y: 5, next: 'right', color: COLORS[0], type: 'finish' },\n    { x: 3, y: 5, next: 'right', color: COLORS[0], type: 'finish' },\n    { x: 4, y: 5, color: COLORS[0], type: 'finish' },\n    { x: 5, y: 1, next: 'down', color: COLORS[1], type: 'finish' },\n    { x: 5, y: 2, next: 'down', color: COLORS[1], type: 'finish' },\n    { x: 5, y: 3, next: 'down', color: COLORS[1], type: 'finish' },\n    { x: 5, y: 4, color: COLORS[1], type: 'finish' },\n    { x: 9, y: 5, next: 'left', color: COLORS[2], type: 'finish' },\n    { x: 8, y: 5, next: 'left', color: COLORS[2], type: 'finish' },\n    { x: 7, y: 5, next: 'left', color: COLORS[2], type: 'finish' },\n    { x: 6, y: 5, color: COLORS[2], type: 'finish' },\n    { x: 5, y: 9, next: 'up', color: COLORS[3], type: 'finish' },\n    { x: 5, y: 8, next: 'up', color: COLORS[3], type: 'finish' },\n    { x: 5, y: 7, next: 'up', color: COLORS[3], type: 'finish' },\n    { x: 5, y: 6, color: COLORS[3], type: 'finish' },\n]\n\nexport type colorName = 'red' | 'blue' | 'green' | 'yellow'\n\nexport type colors = [colorName, colorName, colorName, colorName]\n","import * as React from 'react'\nimport './Dialog.css'\n\nexport class Dialog extends React.PureComponent {\n    render() {\n        const { children } = this.props\n\n        return (\n            <div className=\"Dialog\">\n                {children}\n            </div>\n        )\n    }\n}\n","import { colorName } from './constants'\n\nexport const randomNumber = (min = 0, max = 1) => Math.floor(Math.random() * (max - min + 1)) + min\n\nexport const translateColor = (color: colorName) => ({\n    blue: 'blauw',\n    green: 'groen',\n    red: 'rood',\n    yellow: 'geel',\n}[color])\n\nexport const capitalize = (str: string) => str.charAt(0).toUpperCase() + str.slice(1)\n","import * as React from 'react'\nimport { action } from 'src/App/App'\nimport { colorName } from 'src/constants'\nimport { capitalize, translateColor } from 'src/utils'\nimport './Help.css'\n\nexport class Help extends React.PureComponent<HelpProps> {\n    render() {\n        const { show, activeColor, currentAction } = this.props\n\n        return (\n            <div className={`Help ${show ? 'visible' : 'hidden'}`}>\n                <span className={activeColor}>{capitalize(translateColor(activeColor))}</span> is aan de beurt.\n                <br/>\n                {currentAction === 'roll die' && 'Gooi de dobbelsteen door er op te klikken.'}\n                {currentAction === 'move pawn' && 'Verplaats een pion door er op te klikken.'}\n            </div>\n        )\n    }\n}\n\nexport interface HelpProps {\n    activeColor: colorName\n    currentAction: action\n    show: boolean\n}\n","export class Point {\n    static equals(point1: Point, point2: Point) {\n        return point1.x === point2.x && point1.y === point2.y\n    }\n\n    static add(point1: Point, point2: Point) {\n        return new this(point1.x + point2.x, point1.y + point2.y)\n    }\n\n    static subtract(point1: Point, point2: Point) {\n        return new this(point1.x - point2.x, point1.y - point2.y)\n    }\n\n    constructor(public x: number, public y: number) { }\n}\n","import classNames from 'classnames'\nimport * as React from 'react'\nimport { colorName } from 'src/constants'\nimport { Point } from 'src/point'\nimport './Tile.css'\n\nexport class Tile extends React.PureComponent<TileProps> {\n    // todo: use styled components?\n    render() {\n        const { x, y, size, next, color, type } = this.props\n        const spacing = type === 'base' || type === 'finish' ? 0.35 : 0.15\n        // todo: duplicate in Tile.tsx\n        const styleSize = size - size * spacing\n        const stylePosition = (coordinate: number) => coordinate * size + size * spacing * 0.5\n\n        const className = classNames('Tile', color, {\n            [next as direction]: type === 'path' || type === 'start'\n        })\n        const style = {\n            height: `${styleSize * 100}%`,\n            left: `${stylePosition(x) * 100}%`,\n            top: `${stylePosition(y) * 100}%`,\n            width: `${styleSize * 100}%`,\n        }\n\n        return <div className={className} style={style} />\n    }\n}\n\nexport interface TileModel extends Point {\n    type: tileType\n    color?: colorName\n    next?: direction\n}\n\nexport interface TileProps extends TileModel {\n    /**\n     * Normalized width and height (between 0 and 1)\n     */\n    size: number\n}\n\nexport type tileType = 'base' | 'finish' | 'path' | 'start'\n\nexport type direction = 'up' | 'right' | 'down' | 'left'\n","import classNames from 'classnames'\nimport * as React from 'react'\nimport { colorName } from 'src/constants'\nimport { Point } from 'src/point'\nimport './Pawn.css'\n\nexport class Pawn extends React.PureComponent<PawnProps> {\n    render() {\n        const { pawn, size, disabled } = this.props\n        const spacing = 0.3\n        // todo: duplicate in Tile.tsx\n        const styleSize = size - size * spacing\n        const stylePosition = (coordinate: number) => coordinate * size + size * spacing * 0.5\n\n        const className = classNames('Pawn', pawn.color, { disabled })\n        const style = {\n            height: `${styleSize * 100}%`,\n            left: `${stylePosition(pawn.x) * 100}%`,\n            top: `${stylePosition(pawn.y) * 100}%`,\n            width: `${styleSize * 100}%`,\n        }\n\n        return <div className={className} style={style} onClick={this.handleClick} />\n    }\n\n    handleClick = () => {\n        const { click, disabled } = this.props\n\n        if (disabled) {\n            return\n        }\n\n        click(this.props.pawn)\n    }\n}\n\nexport interface PawnModel extends Point {\n    color: colorName\n}\n\nexport interface PawnProps {\n    disabled: boolean\n    pawn: PawnModel\n    size: number\n    click(pawn: PawnModel): void\n}\n","import * as React from 'react'\nimport './Title.css'\n\nexport const Title = () => <h1 className=\"Title\">\n    <span className=\"word\">Karel</span>\n    <span className=\"word\">erger</span>\n    <span className=\"word\">je</span>\n    <span className=\"word\">niet!</span>\n</h1>\n","import * as React from 'react'\nimport { Tile, TileModel } from 'src/Tile/Tile'\nimport { Pawn, PawnModel } from '../Pawn/Pawn'\nimport { Title } from '../Title/Title'\nimport './Board.css'\n\nexport class Board extends React.PureComponent<BoardProps> {\n  private tileSize: number\n\n  constructor(props: BoardProps) {\n    super(props)\n    this.tileSize = 1 / props.size\n  }\n\n  render() {\n    const { tiles, pawns, pawnClick, disabled, enabledPawns } = this.props\n\n    return <div className=\"Board\">\n      <Title/>\n      <div className=\"inner\">\n        {tiles.map((tile, i) => (\n          <Tile\n            key={i}\n            {...tile}\n            size={this.tileSize} />\n          )\n        )}\n        {pawns.map((pawn, i) => (\n          <Pawn\n            key={i}\n            pawn={pawn}\n            size={this.tileSize}\n            click={pawnClick}\n            disabled={disabled || !enabledPawns.includes(pawn)} />\n          )\n        )}\n      </div>\n    </div>\n  }\n}\n\nexport interface BoardProps {\n  disabled: boolean\n  enabledPawns: PawnModel[]\n  /**\n   * Amount of tiles\n   */\n  size: number\n  tiles: TileModel[]\n  pawns: PawnModel[]\n  pawnClick(pawn: PawnModel): void\n}\n","import classNames from 'classnames'\nimport * as React from 'react'\nimport { randomNumber } from 'src/utils'\nimport './Die.css'\n\nexport class Die extends React.PureComponent<DieProps, DieState> {\n    constructor(props: DieProps) {\n        super(props)\n        this.state = { style: this.randomStyle() }\n    }\n\n    handleClick = () => {\n        const { click, disabled } = this.props\n\n        if (disabled) {\n            return\n        }\n\n        this.setState({ style: this.randomStyle() })\n        click()\n    }\n\n    render() {\n        const { value, disabled } = this.props\n        const { style } = this.state\n        const className = classNames('Die', `value-${value}`, { disabled })\n\n        return (\n            <div className={className} style={style} onClick={this.handleClick}>\n                <div className=\"dot top-left\" />\n                <div className=\"dot top-right\" />\n                <div className=\"dot center-left\" />\n                <div className=\"dot center\" />\n                <div className=\"dot center-right\" />\n                <div className=\"dot bottom-left\" />\n                <div className=\"dot bottom-right\" />\n            </div>\n        )\n    }\n\n    private randomStyle() {\n        return {\n            left: `${randomNumber(63, 90)}%`,\n            top: `${randomNumber(10, 85)}%`,\n            transform: `rotate(${randomNumber(0, 360)}deg)`\n        }\n    }\n}\n\nexport interface DieProps {\n    disabled: boolean\n    value: dieValue\n    click(): void\n}\n\nexport interface DieState {\n    style: {\n        left: string\n        top: string\n        transform: string\n    }\n}\n\nexport type dieValue = 1 | 2 | 3 | 4 | 5 | 6\n","import * as React from 'react'\nimport { BASE_TILES, colorName, COLORS, FINISH_TILES, PATH_TILES, PAWNS } from 'src/constants'\nimport { Dialog } from 'src/Dialog/Dialog'\nimport { Help } from 'src/Help/Help'\nimport { PawnModel } from 'src/Pawn/Pawn'\nimport { Point } from 'src/point'\nimport { direction, TileModel } from 'src/Tile/Tile'\nimport { Board } from '../Board/Board'\nimport { Die, dieValue } from '../Die/Die'\nimport { capitalize, randomNumber, translateColor } from '../utils'\n\nclass App extends React.PureComponent<{}, AppState> {\n    private helpTimeout: NodeJS.Timeout\n\n    constructor(props: {}) {\n        super(props)\n        // todo: don't use state, but just class properties?\n        // https://reactjs.org/docs/state-and-lifecycle.html#adding-lifecycle-methods-to-a-class\n        this.state = {\n            activeColor: COLORS[randomNumber(0, 3)],\n            currentAction: 'roll die',\n            dialog: (\n                <Dialog>\n                    <h1>Karel erger je niet!</h1>\n                    <p>Klik op start hieronder om een willekeurige speler te kiezen die mag beginnen.</p>\n                    <button onClick={this.start}>Start</button>\n                </Dialog>\n            ),\n            die: randomNumber(1, 6) as dieValue,\n            pawns: [...PAWNS],\n            showHelp: false,\n            tiles: BASE_TILES.concat(PATH_TILES, FINISH_TILES),\n        }\n    }\n\n    start = () => {\n        const ok = () => {\n            this.moveActiveColorToStart()\n            this.closeDialog()\n            this.startHelpTimer()\n        }\n\n        this.setState({\n            dialog: (\n                <Dialog>\n                    <h1>{capitalize(translateColor(this.state.activeColor))} mag beginnen!</h1>\n                    <p>Klik op de dobbelsteen om 'm te gooien.</p>\n                    <button onClick={ok}>Ok</button>\n                </Dialog>\n            ),\n        })\n    }\n\n    rollDie = () => {\n        this.setState({\n            currentAction: 'move pawn',\n            die: randomNumber(1, 6) as dieValue,\n            showHelp: false\n        }, this.startHelpTimer)\n    }\n\n    moveActiveColorToStart = () => {\n        const { pawns, activeColor } = this.state\n        const firstPawnOfActiveColor = pawns.find(({ color }) => color === activeColor) as PawnModel\n        const newPawns = this.updatePawns(pawns, firstPawnOfActiveColor, this.startTileOfActiveColor())\n\n        this.setState({ pawns: newPawns })\n    }\n\n    closeDialog = () => {\n        this.setState({ dialog: undefined })\n    }\n\n    updatePawns = (pawns: PawnModel[], from: Point, to: Point) => {\n        const pawnIndex = pawns.findIndex(pawn => Point.equals(pawn, from))\n        const targetPawn = pawns[pawnIndex]\n\n        return [\n            ...pawns.slice(0, pawnIndex),\n            { ...targetPawn, ...to },\n            ...pawns.slice(pawnIndex + 1),\n        ]\n    }\n\n    pawnClick = (clickedPawn: PawnModel) => {\n        const { die } = this.state\n        let { pawns } = this.state\n        const isPawnOnBase = this.tileAt(clickedPawn).type === 'base'\n        const newPosition = isPawnOnBase ? this.startTileOfActiveColor() : this.pointAtStepsFrom(clickedPawn, die)\n\n        const pawnAtNewPosition = pawns.find(pawn => Point.equals(pawn, newPosition))\n        if (pawnAtNewPosition) {\n            const firstEmptyBaseTile = BASE_TILES.find(tile => (\n                tile.color === pawnAtNewPosition.color && !pawns.some(pawn => Point.equals(pawn, tile))\n            )) as TileModel\n            pawns = this.updatePawns(pawns, pawnAtNewPosition, firstEmptyBaseTile)\n        }\n\n        pawns = this.updatePawns(pawns, clickedPawn, newPosition)\n        this.setState({\n            currentAction: 'roll die',\n            pawns,\n            showHelp: false,\n        }, this.startHelpTimer)\n\n        if (!isPawnOnBase) {\n            // wait for pawn to finish animating to its next position plus some additional time\n            setTimeout(this.activateNextColor, 1500)\n        }\n    }\n\n    activateNextColor = () => {\n        this.setState({\n            activeColor: this.nextColor(),\n        }, () => {\n            if (this.activePawns().length === 0) {\n                this.moveActiveColorToStart()\n            }\n        })\n    }\n\n    tileAt = (point: Point) => {\n        return this.state.tiles.find(tile => Point.equals(tile, point)) as TileModel\n    }\n\n    pointAtStepsFrom = (point: Point, steps: number): Point | never => {\n        if (steps === 0) {\n            return point\n        }\n\n        const currentTile = this.tileAt(point)\n        if (!currentTile.next) {\n            const { x, y } = currentTile\n            console.error(`This tile has no next tile: [${x}, ${y}]`)\n            return point\n        }\n\n        const relativeTile: { [key in direction]: Point } = {\n            'down': new Point(0, 1),\n            'left': new Point(-1, 0),\n            'right': new Point(1, 0),\n            'up': new Point(0, -1),\n        }\n        const nextPoint = Point.add(point, relativeTile[currentTile.next])\n\n        if (Point.equals(nextPoint, this.startTileOfActiveColor())) {\n            const finishTileIndex = Math.min(3, steps - 1)\n            return this.finishTilesOfActiveColor()[finishTileIndex]\n        }\n\n        return this.pointAtStepsFrom(nextPoint, --steps)\n    }\n\n    startTileOfActiveColor = () => {\n        const { activeColor } = this.state\n        return PATH_TILES.find(({ type, color }) => type === 'start' && color === activeColor) as TileModel\n    }\n\n    baseTilesOfActiveColor = () => {\n        const { activeColor } = this.state\n        return BASE_TILES.filter(({ color }) => color === activeColor)\n    }\n\n    finishTilesOfActiveColor = () => {\n        const { activeColor } = this.state\n        return FINISH_TILES.filter(({ color }) => color === activeColor)\n    }\n\n    nextColor = () => {\n        const { activeColor } = this.state\n        const nextColorIndex = COLORS.findIndex(color => color === activeColor) + 1\n        return COLORS[nextColorIndex > 3 ? 0 : nextColorIndex]\n    }\n\n    activePawns = () => {\n        const { pawns, activeColor, die } = this.state\n        const pawnsOfActiveColorOnPathTiles = pawns.filter(pawn => (\n            pawn.color === activeColor && PATH_TILES.some(tile => Point.equals(tile, pawn))\n        ))\n\n        if (pawnsOfActiveColorOnPathTiles.length === 0) {\n            return pawnsOfActiveColorOnPathTiles\n        }\n\n        if (die === 6 && !pawns.some(pawn => pawn.color === activeColor && Point.equals(pawn, this.startTileOfActiveColor()))) {\n            return pawns.filter(pawn => (\n                this.baseTilesOfActiveColor().some(tile => Point.equals(tile, pawn))\n            ))\n        }\n\n        return pawnsOfActiveColorOnPathTiles\n    }\n\n    startHelpTimer = () => {\n        clearTimeout(this.helpTimeout)\n        this.helpTimeout = setTimeout(() => {\n            this.setState({ showHelp: true })\n        }, 5000)\n    }\n\n    render() {\n        const { tiles, pawns, die, dialog, currentAction, activeColor, showHelp } = this.state\n\n        return (\n            <>\n                <Help show={showHelp} activeColor={activeColor} currentAction={currentAction} />\n                <Board\n                    size={11}\n                    tiles={tiles}\n                    pawns={pawns}\n                    pawnClick={this.pawnClick}\n                    disabled={currentAction !== 'move pawn'}\n                    enabledPawns={this.activePawns()} />\n                <Die\n                    value={die}\n                    click={this.rollDie}\n                    disabled={currentAction !== 'roll die'} />\n                {dialog}\n            </>\n        )\n    }\n}\n\nexport interface AppState {\n    currentAction: action\n    activeColor: colorName\n    dialog?: JSX.Element\n    die: dieValue\n    pawns: PawnModel[]\n    showHelp: boolean\n    tiles: TileModel[]\n}\n\nexport type action = 'roll die' | 'move pawn'\n\nexport default App\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.')\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.')\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport App from './App/App'\nimport './index.css'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n)\nregisterServiceWorker()\n"],"sourceRoot":""}